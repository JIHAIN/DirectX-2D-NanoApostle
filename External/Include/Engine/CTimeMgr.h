#pragma once


class CTimeMgr
	: public singleton<CTimeMgr>
{
	SINGLE(CTimeMgr);
private:
	LARGE_INTEGER	m_Frequency;	// 1초당 카운팅 가능 수
	LARGE_INTEGER	m_CurrentCount;	// 현재 카운팅
	LARGE_INTEGER	m_PrevCount;	// 이전 프레임 카운팅
		
	float			m_fDT;			// DeltaTime : 1프레임에 걸린 시간
	float			m_Time;			// 누적 시간
	float			m_fEngineDT;	
	float			m_fEngineTime;

	double			m_Second;	// 1초 체크 용도 누적시간

	UINT			m_FPS;

	bool			m_IsStop;
	bool			m_Slow;
	wchar_t			m_TimeInfo[255];
public:
	void Init();
	void Tick();
	void Render();
	bool IsSlow() { return m_Slow; }
	void SlowTime() { m_Slow = !m_Slow;}

	void SetStopMode(bool _IsStop) 
	{ 
		m_IsStop = _IsStop; 
		if(m_IsStop)
			m_fDT = 0.f;
	}

public:	
	float GetDeltaTime() { return m_fDT; }
	float GetEngineDeltaTime() { return m_fEngineDT; }

};